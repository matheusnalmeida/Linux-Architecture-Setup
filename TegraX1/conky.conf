-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
--   print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html

conky.config = {
    alignment = 'middle_right',
    background = false,
    border_width = 1,
    cpu_avg_samples = 2,
    default_color = 'white',
    default_outline_color = 'white',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    extra_newline = false,
    font = 'LCDMono:size=12',
    gap_x = 60,
    gap_y = 60,
    minimum_height = 5,
    minimum_width = 5,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
    draw_graph_borders = false
}

-- Get thermal zone type -> cat /sys/class/thermal/thermal_zone*/type

conky.text = [[
${color #9AA2F2}${font LCDMono:size=18}${exec cat /sys/firmware/devicetree/base/model}

${color #9AA2F2}${font LCDMono:size=16}System${font}${color}
Uptime:${alignr}$uptime
Linux ${kernel}:${alignr}${conky_build_arch}
Jetpack ${exec $HOME/Scripts/get_nvidia_jetpack_version.sh} [L4T ${exec $HOME/Scripts/get_nvidia_l4t_version.sh}]

${color #9AA2F2}${font LCDMono:size=16}Processor${font}${color}
CPU Temp:${alignr}${execi 2 cat /sys/class/thermal/thermal_zone1/temp | sed 's/\(.\)..$/.\1/'} C
GPU Temp:${alignr}${execi 2 cat /sys/class/thermal/thermal_zone2/temp | sed 's/\(.\)..$/.\1/'} C
BAT Temp:${alignr}${execi 2 cat /sys/class/thermal/thermal_zone8/temp | sed 's/\(.\)..$/.\1/'} C

FAN Load: ${execi 2 echo "scale=1;($(cat /sys/class/hwmon/hwmon2/target_pwm) * 100.0)/255" | bc -l}%
FAN RPM: ${execi 2 cat /sys/class/hwmon/hwmon2/rpm_measured}

CPU1 Clock:${alignr}${freq_g 1} GHz
CPU2 Clock:${alignr}${freq_g 2} GHz
CPU3 Clock:${alignr}${freq_g 3} GHz
CPU4 Clock:${alignr}${freq_g 4} GHz

CPU1  ${cpu cpu1}% ${cpubar 4}
CPU2  ${cpu cpu2}% ${cpubar 4}
CPU3  ${cpu cpu3}% ${cpubar 4}
CPU4  ${cpu cpu4}% ${cpubar 4}

${execgraph "echo "scale=0;$(cat /sys/class/devfreq/57000000.gpu/device/load)/10" | bc -l" }
GPU Clock:${alignr}${execi 2 echo "scale=1;$(cat /sys/class/devfreq/57000000.gpu/device/devfreq/57000000.gpu/cur_freq)/1000000" | bc -l} MHz
GPU Load:${alignr}${execi 2 echo "scale=1;$(cat /sys/class/devfreq/57000000.gpu/device/load)/10" | bc -l}%
GPU Gov:${alignr}${exec cat /sys/class/devfreq/57000000.gpu/device/devfreq/57000000.gpu/governor}

${color #9AA2F2}${font LCDMono:size=16}Memory${font}${color}
MEM        $mem/$memmax${alignr}$memperc%
SWAP       $swap/$swapmax${alignr}$swapperc%

${color #9AA2F2}${font LCDMono:size=16}HDD${font}${color}
/ ${fs_used /}/${fs_size /} ${fs_bar 6 /}
/home ${fs_used /home}/${fs_size /home} ${fs_bar 6 /home}

${color #9AA2F2}${font LCDMono:size=16}Networking${font}${color}
Up: ${upspeed} ${color grey} - Down: ${downspeed}

${color #9AA2F2}${font LCDMono:size=16}Top Processes${font}${color}
Processes:$color $processes  Running:$color $running_processes

Name              PID     CPU%   MEM%
${top name 1} ${top pid 1} ${top cpu 1} ${top mem 1}
${top name 2} ${top pid 2} ${top cpu 2} ${top mem 2}
${top name 3} ${top pid 3} ${top cpu 3} ${top mem 3}
${top name 4} ${top pid 4} ${top cpu 4} ${top mem 4}
]]
